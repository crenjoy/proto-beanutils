// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crenjoy/protobuf/basic_test.proto

package crenjoy.protobuf;

/**
 * <pre>
 * Basic Test Message .
 * </pre>
 *
 * Protobuf type {@code crenjoy.protobuf.Basic1TestMessage}
 */
public final class Basic1TestMessage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:crenjoy.protobuf.Basic1TestMessage)
    Basic1TestMessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Basic1TestMessage.newBuilder() to construct.
  private Basic1TestMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Basic1TestMessage() {
    testString_ = "";
    testBytes_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Basic1TestMessage();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_Basic1TestMessage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_Basic1TestMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            crenjoy.protobuf.Basic1TestMessage.class, crenjoy.protobuf.Basic1TestMessage.Builder.class);
  }

  public static final int TEST_DOUBLE_FIELD_NUMBER = 1;
  private double testDouble_;
  /**
   * <code>double test_double = 1;</code>
   * @return The testDouble.
   */
  @java.lang.Override
  public double getTestDouble() {
    return testDouble_;
  }

  public static final int TEST_FLOAT_FIELD_NUMBER = 2;
  private float testFloat_;
  /**
   * <code>float test_float = 2;</code>
   * @return The testFloat.
   */
  @java.lang.Override
  public float getTestFloat() {
    return testFloat_;
  }

  public static final int TEST_INT32_FIELD_NUMBER = 3;
  private int testInt32_;
  /**
   * <code>int32 test_int32 = 3;</code>
   * @return The testInt32.
   */
  @java.lang.Override
  public int getTestInt32() {
    return testInt32_;
  }

  public static final int TEST_INT64_FIELD_NUMBER = 4;
  private long testInt64_;
  /**
   * <code>int64 test_int64 = 4;</code>
   * @return The testInt64.
   */
  @java.lang.Override
  public long getTestInt64() {
    return testInt64_;
  }

  public static final int TEST_UINT32_FIELD_NUMBER = 5;
  private int testUint32_;
  /**
   * <code>uint32 test_uint32 = 5;</code>
   * @return The testUint32.
   */
  @java.lang.Override
  public int getTestUint32() {
    return testUint32_;
  }

  public static final int TEST_UINT64_FIELD_NUMBER = 6;
  private long testUint64_;
  /**
   * <code>uint64 test_uint64 = 6;</code>
   * @return The testUint64.
   */
  @java.lang.Override
  public long getTestUint64() {
    return testUint64_;
  }

  public static final int TEST_SINT32_FIELD_NUMBER = 7;
  private int testSint32_;
  /**
   * <code>sint32 test_sint32 = 7;</code>
   * @return The testSint32.
   */
  @java.lang.Override
  public int getTestSint32() {
    return testSint32_;
  }

  public static final int TEST_SINT64_FIELD_NUMBER = 8;
  private long testSint64_;
  /**
   * <code>sint64 test_sint64 = 8;</code>
   * @return The testSint64.
   */
  @java.lang.Override
  public long getTestSint64() {
    return testSint64_;
  }

  public static final int TEST_FIXED32_FIELD_NUMBER = 9;
  private int testFixed32_;
  /**
   * <code>fixed32 test_fixed32 = 9;</code>
   * @return The testFixed32.
   */
  @java.lang.Override
  public int getTestFixed32() {
    return testFixed32_;
  }

  public static final int TEST_FIXED64_FIELD_NUMBER = 10;
  private long testFixed64_;
  /**
   * <code>fixed64 test_fixed64 = 10;</code>
   * @return The testFixed64.
   */
  @java.lang.Override
  public long getTestFixed64() {
    return testFixed64_;
  }

  public static final int TEST_SFIXED32_FIELD_NUMBER = 11;
  private int testSfixed32_;
  /**
   * <code>sfixed32 test_sfixed32 = 11;</code>
   * @return The testSfixed32.
   */
  @java.lang.Override
  public int getTestSfixed32() {
    return testSfixed32_;
  }

  public static final int TEST_SFIXED64_FIELD_NUMBER = 12;
  private long testSfixed64_;
  /**
   * <code>sfixed64 test_sfixed64 = 12;</code>
   * @return The testSfixed64.
   */
  @java.lang.Override
  public long getTestSfixed64() {
    return testSfixed64_;
  }

  public static final int TEST_BOOL_FIELD_NUMBER = 13;
  private boolean testBool_;
  /**
   * <code>bool test_bool = 13;</code>
   * @return The testBool.
   */
  @java.lang.Override
  public boolean getTestBool() {
    return testBool_;
  }

  public static final int TEST_STRING_FIELD_NUMBER = 14;
  private volatile java.lang.Object testString_;
  /**
   * <code>string test_string = 14;</code>
   * @return The testString.
   */
  @java.lang.Override
  public java.lang.String getTestString() {
    java.lang.Object ref = testString_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      testString_ = s;
      return s;
    }
  }
  /**
   * <code>string test_string = 14;</code>
   * @return The bytes for testString.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTestStringBytes() {
    java.lang.Object ref = testString_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      testString_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TEST_BYTES_FIELD_NUMBER = 15;
  private com.google.protobuf.ByteString testBytes_;
  /**
   * <code>bytes test_bytes = 15;</code>
   * @return The testBytes.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTestBytes() {
    return testBytes_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (java.lang.Double.doubleToRawLongBits(testDouble_) != 0) {
      output.writeDouble(1, testDouble_);
    }
    if (java.lang.Float.floatToRawIntBits(testFloat_) != 0) {
      output.writeFloat(2, testFloat_);
    }
    if (testInt32_ != 0) {
      output.writeInt32(3, testInt32_);
    }
    if (testInt64_ != 0L) {
      output.writeInt64(4, testInt64_);
    }
    if (testUint32_ != 0) {
      output.writeUInt32(5, testUint32_);
    }
    if (testUint64_ != 0L) {
      output.writeUInt64(6, testUint64_);
    }
    if (testSint32_ != 0) {
      output.writeSInt32(7, testSint32_);
    }
    if (testSint64_ != 0L) {
      output.writeSInt64(8, testSint64_);
    }
    if (testFixed32_ != 0) {
      output.writeFixed32(9, testFixed32_);
    }
    if (testFixed64_ != 0L) {
      output.writeFixed64(10, testFixed64_);
    }
    if (testSfixed32_ != 0) {
      output.writeSFixed32(11, testSfixed32_);
    }
    if (testSfixed64_ != 0L) {
      output.writeSFixed64(12, testSfixed64_);
    }
    if (testBool_ != false) {
      output.writeBool(13, testBool_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(testString_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, testString_);
    }
    if (!testBytes_.isEmpty()) {
      output.writeBytes(15, testBytes_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (java.lang.Double.doubleToRawLongBits(testDouble_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, testDouble_);
    }
    if (java.lang.Float.floatToRawIntBits(testFloat_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, testFloat_);
    }
    if (testInt32_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, testInt32_);
    }
    if (testInt64_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, testInt64_);
    }
    if (testUint32_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, testUint32_);
    }
    if (testUint64_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, testUint64_);
    }
    if (testSint32_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(7, testSint32_);
    }
    if (testSint64_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(8, testSint64_);
    }
    if (testFixed32_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed32Size(9, testFixed32_);
    }
    if (testFixed64_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed64Size(10, testFixed64_);
    }
    if (testSfixed32_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed32Size(11, testSfixed32_);
    }
    if (testSfixed64_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed64Size(12, testSfixed64_);
    }
    if (testBool_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(13, testBool_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(testString_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, testString_);
    }
    if (!testBytes_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(15, testBytes_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof crenjoy.protobuf.Basic1TestMessage)) {
      return super.equals(obj);
    }
    crenjoy.protobuf.Basic1TestMessage other = (crenjoy.protobuf.Basic1TestMessage) obj;

    if (java.lang.Double.doubleToLongBits(getTestDouble())
        != java.lang.Double.doubleToLongBits(
            other.getTestDouble())) return false;
    if (java.lang.Float.floatToIntBits(getTestFloat())
        != java.lang.Float.floatToIntBits(
            other.getTestFloat())) return false;
    if (getTestInt32()
        != other.getTestInt32()) return false;
    if (getTestInt64()
        != other.getTestInt64()) return false;
    if (getTestUint32()
        != other.getTestUint32()) return false;
    if (getTestUint64()
        != other.getTestUint64()) return false;
    if (getTestSint32()
        != other.getTestSint32()) return false;
    if (getTestSint64()
        != other.getTestSint64()) return false;
    if (getTestFixed32()
        != other.getTestFixed32()) return false;
    if (getTestFixed64()
        != other.getTestFixed64()) return false;
    if (getTestSfixed32()
        != other.getTestSfixed32()) return false;
    if (getTestSfixed64()
        != other.getTestSfixed64()) return false;
    if (getTestBool()
        != other.getTestBool()) return false;
    if (!getTestString()
        .equals(other.getTestString())) return false;
    if (!getTestBytes()
        .equals(other.getTestBytes())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TEST_DOUBLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getTestDouble()));
    hash = (37 * hash) + TEST_FLOAT_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTestFloat());
    hash = (37 * hash) + TEST_INT32_FIELD_NUMBER;
    hash = (53 * hash) + getTestInt32();
    hash = (37 * hash) + TEST_INT64_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTestInt64());
    hash = (37 * hash) + TEST_UINT32_FIELD_NUMBER;
    hash = (53 * hash) + getTestUint32();
    hash = (37 * hash) + TEST_UINT64_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTestUint64());
    hash = (37 * hash) + TEST_SINT32_FIELD_NUMBER;
    hash = (53 * hash) + getTestSint32();
    hash = (37 * hash) + TEST_SINT64_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTestSint64());
    hash = (37 * hash) + TEST_FIXED32_FIELD_NUMBER;
    hash = (53 * hash) + getTestFixed32();
    hash = (37 * hash) + TEST_FIXED64_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTestFixed64());
    hash = (37 * hash) + TEST_SFIXED32_FIELD_NUMBER;
    hash = (53 * hash) + getTestSfixed32();
    hash = (37 * hash) + TEST_SFIXED64_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTestSfixed64());
    hash = (37 * hash) + TEST_BOOL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getTestBool());
    hash = (37 * hash) + TEST_STRING_FIELD_NUMBER;
    hash = (53 * hash) + getTestString().hashCode();
    hash = (37 * hash) + TEST_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + getTestBytes().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static crenjoy.protobuf.Basic1TestMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static crenjoy.protobuf.Basic1TestMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static crenjoy.protobuf.Basic1TestMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static crenjoy.protobuf.Basic1TestMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static crenjoy.protobuf.Basic1TestMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static crenjoy.protobuf.Basic1TestMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static crenjoy.protobuf.Basic1TestMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static crenjoy.protobuf.Basic1TestMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static crenjoy.protobuf.Basic1TestMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static crenjoy.protobuf.Basic1TestMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static crenjoy.protobuf.Basic1TestMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static crenjoy.protobuf.Basic1TestMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(crenjoy.protobuf.Basic1TestMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Basic Test Message .
   * </pre>
   *
   * Protobuf type {@code crenjoy.protobuf.Basic1TestMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:crenjoy.protobuf.Basic1TestMessage)
      crenjoy.protobuf.Basic1TestMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_Basic1TestMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_Basic1TestMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crenjoy.protobuf.Basic1TestMessage.class, crenjoy.protobuf.Basic1TestMessage.Builder.class);
    }

    // Construct using crenjoy.protobuf.Basic1TestMessage.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      testDouble_ = 0D;

      testFloat_ = 0F;

      testInt32_ = 0;

      testInt64_ = 0L;

      testUint32_ = 0;

      testUint64_ = 0L;

      testSint32_ = 0;

      testSint64_ = 0L;

      testFixed32_ = 0;

      testFixed64_ = 0L;

      testSfixed32_ = 0;

      testSfixed64_ = 0L;

      testBool_ = false;

      testString_ = "";

      testBytes_ = com.google.protobuf.ByteString.EMPTY;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_Basic1TestMessage_descriptor;
    }

    @java.lang.Override
    public crenjoy.protobuf.Basic1TestMessage getDefaultInstanceForType() {
      return crenjoy.protobuf.Basic1TestMessage.getDefaultInstance();
    }

    @java.lang.Override
    public crenjoy.protobuf.Basic1TestMessage build() {
      crenjoy.protobuf.Basic1TestMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public crenjoy.protobuf.Basic1TestMessage buildPartial() {
      crenjoy.protobuf.Basic1TestMessage result = new crenjoy.protobuf.Basic1TestMessage(this);
      result.testDouble_ = testDouble_;
      result.testFloat_ = testFloat_;
      result.testInt32_ = testInt32_;
      result.testInt64_ = testInt64_;
      result.testUint32_ = testUint32_;
      result.testUint64_ = testUint64_;
      result.testSint32_ = testSint32_;
      result.testSint64_ = testSint64_;
      result.testFixed32_ = testFixed32_;
      result.testFixed64_ = testFixed64_;
      result.testSfixed32_ = testSfixed32_;
      result.testSfixed64_ = testSfixed64_;
      result.testBool_ = testBool_;
      result.testString_ = testString_;
      result.testBytes_ = testBytes_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof crenjoy.protobuf.Basic1TestMessage) {
        return mergeFrom((crenjoy.protobuf.Basic1TestMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(crenjoy.protobuf.Basic1TestMessage other) {
      if (other == crenjoy.protobuf.Basic1TestMessage.getDefaultInstance()) return this;
      if (other.getTestDouble() != 0D) {
        setTestDouble(other.getTestDouble());
      }
      if (other.getTestFloat() != 0F) {
        setTestFloat(other.getTestFloat());
      }
      if (other.getTestInt32() != 0) {
        setTestInt32(other.getTestInt32());
      }
      if (other.getTestInt64() != 0L) {
        setTestInt64(other.getTestInt64());
      }
      if (other.getTestUint32() != 0) {
        setTestUint32(other.getTestUint32());
      }
      if (other.getTestUint64() != 0L) {
        setTestUint64(other.getTestUint64());
      }
      if (other.getTestSint32() != 0) {
        setTestSint32(other.getTestSint32());
      }
      if (other.getTestSint64() != 0L) {
        setTestSint64(other.getTestSint64());
      }
      if (other.getTestFixed32() != 0) {
        setTestFixed32(other.getTestFixed32());
      }
      if (other.getTestFixed64() != 0L) {
        setTestFixed64(other.getTestFixed64());
      }
      if (other.getTestSfixed32() != 0) {
        setTestSfixed32(other.getTestSfixed32());
      }
      if (other.getTestSfixed64() != 0L) {
        setTestSfixed64(other.getTestSfixed64());
      }
      if (other.getTestBool() != false) {
        setTestBool(other.getTestBool());
      }
      if (!other.getTestString().isEmpty()) {
        testString_ = other.testString_;
        onChanged();
      }
      if (other.getTestBytes() != com.google.protobuf.ByteString.EMPTY) {
        setTestBytes(other.getTestBytes());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              testDouble_ = input.readDouble();

              break;
            } // case 9
            case 21: {
              testFloat_ = input.readFloat();

              break;
            } // case 21
            case 24: {
              testInt32_ = input.readInt32();

              break;
            } // case 24
            case 32: {
              testInt64_ = input.readInt64();

              break;
            } // case 32
            case 40: {
              testUint32_ = input.readUInt32();

              break;
            } // case 40
            case 48: {
              testUint64_ = input.readUInt64();

              break;
            } // case 48
            case 56: {
              testSint32_ = input.readSInt32();

              break;
            } // case 56
            case 64: {
              testSint64_ = input.readSInt64();

              break;
            } // case 64
            case 77: {
              testFixed32_ = input.readFixed32();

              break;
            } // case 77
            case 81: {
              testFixed64_ = input.readFixed64();

              break;
            } // case 81
            case 93: {
              testSfixed32_ = input.readSFixed32();

              break;
            } // case 93
            case 97: {
              testSfixed64_ = input.readSFixed64();

              break;
            } // case 97
            case 104: {
              testBool_ = input.readBool();

              break;
            } // case 104
            case 114: {
              testString_ = input.readStringRequireUtf8();

              break;
            } // case 114
            case 122: {
              testBytes_ = input.readBytes();

              break;
            } // case 122
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private double testDouble_ ;
    /**
     * <code>double test_double = 1;</code>
     * @return The testDouble.
     */
    @java.lang.Override
    public double getTestDouble() {
      return testDouble_;
    }
    /**
     * <code>double test_double = 1;</code>
     * @param value The testDouble to set.
     * @return This builder for chaining.
     */
    public Builder setTestDouble(double value) {
      
      testDouble_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double test_double = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestDouble() {
      
      testDouble_ = 0D;
      onChanged();
      return this;
    }

    private float testFloat_ ;
    /**
     * <code>float test_float = 2;</code>
     * @return The testFloat.
     */
    @java.lang.Override
    public float getTestFloat() {
      return testFloat_;
    }
    /**
     * <code>float test_float = 2;</code>
     * @param value The testFloat to set.
     * @return This builder for chaining.
     */
    public Builder setTestFloat(float value) {
      
      testFloat_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float test_float = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestFloat() {
      
      testFloat_ = 0F;
      onChanged();
      return this;
    }

    private int testInt32_ ;
    /**
     * <code>int32 test_int32 = 3;</code>
     * @return The testInt32.
     */
    @java.lang.Override
    public int getTestInt32() {
      return testInt32_;
    }
    /**
     * <code>int32 test_int32 = 3;</code>
     * @param value The testInt32 to set.
     * @return This builder for chaining.
     */
    public Builder setTestInt32(int value) {
      
      testInt32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 test_int32 = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestInt32() {
      
      testInt32_ = 0;
      onChanged();
      return this;
    }

    private long testInt64_ ;
    /**
     * <code>int64 test_int64 = 4;</code>
     * @return The testInt64.
     */
    @java.lang.Override
    public long getTestInt64() {
      return testInt64_;
    }
    /**
     * <code>int64 test_int64 = 4;</code>
     * @param value The testInt64 to set.
     * @return This builder for chaining.
     */
    public Builder setTestInt64(long value) {
      
      testInt64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 test_int64 = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestInt64() {
      
      testInt64_ = 0L;
      onChanged();
      return this;
    }

    private int testUint32_ ;
    /**
     * <code>uint32 test_uint32 = 5;</code>
     * @return The testUint32.
     */
    @java.lang.Override
    public int getTestUint32() {
      return testUint32_;
    }
    /**
     * <code>uint32 test_uint32 = 5;</code>
     * @param value The testUint32 to set.
     * @return This builder for chaining.
     */
    public Builder setTestUint32(int value) {
      
      testUint32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 test_uint32 = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestUint32() {
      
      testUint32_ = 0;
      onChanged();
      return this;
    }

    private long testUint64_ ;
    /**
     * <code>uint64 test_uint64 = 6;</code>
     * @return The testUint64.
     */
    @java.lang.Override
    public long getTestUint64() {
      return testUint64_;
    }
    /**
     * <code>uint64 test_uint64 = 6;</code>
     * @param value The testUint64 to set.
     * @return This builder for chaining.
     */
    public Builder setTestUint64(long value) {
      
      testUint64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 test_uint64 = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestUint64() {
      
      testUint64_ = 0L;
      onChanged();
      return this;
    }

    private int testSint32_ ;
    /**
     * <code>sint32 test_sint32 = 7;</code>
     * @return The testSint32.
     */
    @java.lang.Override
    public int getTestSint32() {
      return testSint32_;
    }
    /**
     * <code>sint32 test_sint32 = 7;</code>
     * @param value The testSint32 to set.
     * @return This builder for chaining.
     */
    public Builder setTestSint32(int value) {
      
      testSint32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sint32 test_sint32 = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestSint32() {
      
      testSint32_ = 0;
      onChanged();
      return this;
    }

    private long testSint64_ ;
    /**
     * <code>sint64 test_sint64 = 8;</code>
     * @return The testSint64.
     */
    @java.lang.Override
    public long getTestSint64() {
      return testSint64_;
    }
    /**
     * <code>sint64 test_sint64 = 8;</code>
     * @param value The testSint64 to set.
     * @return This builder for chaining.
     */
    public Builder setTestSint64(long value) {
      
      testSint64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sint64 test_sint64 = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestSint64() {
      
      testSint64_ = 0L;
      onChanged();
      return this;
    }

    private int testFixed32_ ;
    /**
     * <code>fixed32 test_fixed32 = 9;</code>
     * @return The testFixed32.
     */
    @java.lang.Override
    public int getTestFixed32() {
      return testFixed32_;
    }
    /**
     * <code>fixed32 test_fixed32 = 9;</code>
     * @param value The testFixed32 to set.
     * @return This builder for chaining.
     */
    public Builder setTestFixed32(int value) {
      
      testFixed32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>fixed32 test_fixed32 = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestFixed32() {
      
      testFixed32_ = 0;
      onChanged();
      return this;
    }

    private long testFixed64_ ;
    /**
     * <code>fixed64 test_fixed64 = 10;</code>
     * @return The testFixed64.
     */
    @java.lang.Override
    public long getTestFixed64() {
      return testFixed64_;
    }
    /**
     * <code>fixed64 test_fixed64 = 10;</code>
     * @param value The testFixed64 to set.
     * @return This builder for chaining.
     */
    public Builder setTestFixed64(long value) {
      
      testFixed64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>fixed64 test_fixed64 = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestFixed64() {
      
      testFixed64_ = 0L;
      onChanged();
      return this;
    }

    private int testSfixed32_ ;
    /**
     * <code>sfixed32 test_sfixed32 = 11;</code>
     * @return The testSfixed32.
     */
    @java.lang.Override
    public int getTestSfixed32() {
      return testSfixed32_;
    }
    /**
     * <code>sfixed32 test_sfixed32 = 11;</code>
     * @param value The testSfixed32 to set.
     * @return This builder for chaining.
     */
    public Builder setTestSfixed32(int value) {
      
      testSfixed32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sfixed32 test_sfixed32 = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestSfixed32() {
      
      testSfixed32_ = 0;
      onChanged();
      return this;
    }

    private long testSfixed64_ ;
    /**
     * <code>sfixed64 test_sfixed64 = 12;</code>
     * @return The testSfixed64.
     */
    @java.lang.Override
    public long getTestSfixed64() {
      return testSfixed64_;
    }
    /**
     * <code>sfixed64 test_sfixed64 = 12;</code>
     * @param value The testSfixed64 to set.
     * @return This builder for chaining.
     */
    public Builder setTestSfixed64(long value) {
      
      testSfixed64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sfixed64 test_sfixed64 = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestSfixed64() {
      
      testSfixed64_ = 0L;
      onChanged();
      return this;
    }

    private boolean testBool_ ;
    /**
     * <code>bool test_bool = 13;</code>
     * @return The testBool.
     */
    @java.lang.Override
    public boolean getTestBool() {
      return testBool_;
    }
    /**
     * <code>bool test_bool = 13;</code>
     * @param value The testBool to set.
     * @return This builder for chaining.
     */
    public Builder setTestBool(boolean value) {
      
      testBool_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool test_bool = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestBool() {
      
      testBool_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object testString_ = "";
    /**
     * <code>string test_string = 14;</code>
     * @return The testString.
     */
    public java.lang.String getTestString() {
      java.lang.Object ref = testString_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        testString_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string test_string = 14;</code>
     * @return The bytes for testString.
     */
    public com.google.protobuf.ByteString
        getTestStringBytes() {
      java.lang.Object ref = testString_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        testString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string test_string = 14;</code>
     * @param value The testString to set.
     * @return This builder for chaining.
     */
    public Builder setTestString(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      testString_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string test_string = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestString() {
      
      testString_ = getDefaultInstance().getTestString();
      onChanged();
      return this;
    }
    /**
     * <code>string test_string = 14;</code>
     * @param value The bytes for testString to set.
     * @return This builder for chaining.
     */
    public Builder setTestStringBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      testString_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString testBytes_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes test_bytes = 15;</code>
     * @return The testBytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTestBytes() {
      return testBytes_;
    }
    /**
     * <code>bytes test_bytes = 15;</code>
     * @param value The testBytes to set.
     * @return This builder for chaining.
     */
    public Builder setTestBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      testBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bytes test_bytes = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestBytes() {
      
      testBytes_ = getDefaultInstance().getTestBytes();
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:crenjoy.protobuf.Basic1TestMessage)
  }

  // @@protoc_insertion_point(class_scope:crenjoy.protobuf.Basic1TestMessage)
  private static final crenjoy.protobuf.Basic1TestMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new crenjoy.protobuf.Basic1TestMessage();
  }

  public static crenjoy.protobuf.Basic1TestMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Basic1TestMessage>
      PARSER = new com.google.protobuf.AbstractParser<Basic1TestMessage>() {
    @java.lang.Override
    public Basic1TestMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Basic1TestMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Basic1TestMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public crenjoy.protobuf.Basic1TestMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

