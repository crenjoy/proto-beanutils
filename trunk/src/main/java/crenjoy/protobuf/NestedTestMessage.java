// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crenjoy/protobuf/basic_test.proto

package crenjoy.protobuf;

/**
 * <pre>
 *Nested Test Message.
 * </pre>
 *
 * Protobuf type {@code crenjoy.protobuf.NestedTestMessage}
 */
public final class NestedTestMessage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:crenjoy.protobuf.NestedTestMessage)
    NestedTestMessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use NestedTestMessage.newBuilder() to construct.
  private NestedTestMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private NestedTestMessage() {
    testString_ = "";
    testStrList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    testBasicList_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new NestedTestMessage();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_NestedTestMessage_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetTestStrMap();
      case 7:
        return internalGetTestBasicMap();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_NestedTestMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            crenjoy.protobuf.NestedTestMessage.class, crenjoy.protobuf.NestedTestMessage.Builder.class);
  }

  public static final int TEST_STRING_FIELD_NUMBER = 1;
  private volatile java.lang.Object testString_;
  /**
   * <code>string test_string = 1;</code>
   * @return The testString.
   */
  @java.lang.Override
  public java.lang.String getTestString() {
    java.lang.Object ref = testString_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      testString_ = s;
      return s;
    }
  }
  /**
   * <code>string test_string = 1;</code>
   * @return The bytes for testString.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTestStringBytes() {
    java.lang.Object ref = testString_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      testString_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TEST_DOUBLE_FIELD_NUMBER = 2;
  private double testDouble_;
  /**
   * <code>double test_double = 2;</code>
   * @return The testDouble.
   */
  @java.lang.Override
  public double getTestDouble() {
    return testDouble_;
  }

  public static final int TEST_FLOAT_FIELD_NUMBER = 3;
  private float testFloat_;
  /**
   * <code>float test_float = 3;</code>
   * @return The testFloat.
   */
  @java.lang.Override
  public float getTestFloat() {
    return testFloat_;
  }

  public static final int TEST_BASIC_BEAN_FIELD_NUMBER = 4;
  private crenjoy.protobuf.Basic2TestMessage testBasicBean_;
  /**
   * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
   * @return Whether the testBasicBean field is set.
   */
  @java.lang.Override
  public boolean hasTestBasicBean() {
    return testBasicBean_ != null;
  }
  /**
   * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
   * @return The testBasicBean.
   */
  @java.lang.Override
  public crenjoy.protobuf.Basic2TestMessage getTestBasicBean() {
    return testBasicBean_ == null ? crenjoy.protobuf.Basic2TestMessage.getDefaultInstance() : testBasicBean_;
  }
  /**
   * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
   */
  @java.lang.Override
  public crenjoy.protobuf.Basic2TestMessageOrBuilder getTestBasicBeanOrBuilder() {
    return getTestBasicBean();
  }

  public static final int TEST_STR_MAP_FIELD_NUMBER = 5;
  private static final class TestStrMapDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_NestedTestMessage_TestStrMapEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> testStrMap_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetTestStrMap() {
    if (testStrMap_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TestStrMapDefaultEntryHolder.defaultEntry);
    }
    return testStrMap_;
  }

  public int getTestStrMapCount() {
    return internalGetTestStrMap().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; test_str_map = 5;</code>
   */

  @java.lang.Override
  public boolean containsTestStrMap(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetTestStrMap().getMap().containsKey(key);
  }
  /**
   * Use {@link #getTestStrMapMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getTestStrMap() {
    return getTestStrMapMap();
  }
  /**
   * <code>map&lt;string, string&gt; test_str_map = 5;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getTestStrMapMap() {
    return internalGetTestStrMap().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; test_str_map = 5;</code>
   */
  @java.lang.Override

  public java.lang.String getTestStrMapOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetTestStrMap().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; test_str_map = 5;</code>
   */
  @java.lang.Override

  public java.lang.String getTestStrMapOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetTestStrMap().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int TEST_STR_LIST_FIELD_NUMBER = 6;
  private com.google.protobuf.LazyStringList testStrList_;
  /**
   * <code>repeated string test_str_list = 6;</code>
   * @return A list containing the testStrList.
   */
  public com.google.protobuf.ProtocolStringList
      getTestStrListList() {
    return testStrList_;
  }
  /**
   * <code>repeated string test_str_list = 6;</code>
   * @return The count of testStrList.
   */
  public int getTestStrListCount() {
    return testStrList_.size();
  }
  /**
   * <code>repeated string test_str_list = 6;</code>
   * @param index The index of the element to return.
   * @return The testStrList at the given index.
   */
  public java.lang.String getTestStrList(int index) {
    return testStrList_.get(index);
  }
  /**
   * <code>repeated string test_str_list = 6;</code>
   * @param index The index of the value to return.
   * @return The bytes of the testStrList at the given index.
   */
  public com.google.protobuf.ByteString
      getTestStrListBytes(int index) {
    return testStrList_.getByteString(index);
  }

  public static final int TEST_BASIC_MAP_FIELD_NUMBER = 7;
  private static final class TestBasicMapDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, crenjoy.protobuf.Basic2TestMessage> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, crenjoy.protobuf.Basic2TestMessage>newDefaultInstance(
                crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_NestedTestMessage_TestBasicMapEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                crenjoy.protobuf.Basic2TestMessage.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, crenjoy.protobuf.Basic2TestMessage> testBasicMap_;
  private com.google.protobuf.MapField<java.lang.String, crenjoy.protobuf.Basic2TestMessage>
  internalGetTestBasicMap() {
    if (testBasicMap_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TestBasicMapDefaultEntryHolder.defaultEntry);
    }
    return testBasicMap_;
  }

  public int getTestBasicMapCount() {
    return internalGetTestBasicMap().getMap().size();
  }
  /**
   * <code>map&lt;string, .crenjoy.protobuf.Basic2TestMessage&gt; test_basic_map = 7;</code>
   */

  @java.lang.Override
  public boolean containsTestBasicMap(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetTestBasicMap().getMap().containsKey(key);
  }
  /**
   * Use {@link #getTestBasicMapMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, crenjoy.protobuf.Basic2TestMessage> getTestBasicMap() {
    return getTestBasicMapMap();
  }
  /**
   * <code>map&lt;string, .crenjoy.protobuf.Basic2TestMessage&gt; test_basic_map = 7;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, crenjoy.protobuf.Basic2TestMessage> getTestBasicMapMap() {
    return internalGetTestBasicMap().getMap();
  }
  /**
   * <code>map&lt;string, .crenjoy.protobuf.Basic2TestMessage&gt; test_basic_map = 7;</code>
   */
  @java.lang.Override

  public crenjoy.protobuf.Basic2TestMessage getTestBasicMapOrDefault(
      java.lang.String key,
      crenjoy.protobuf.Basic2TestMessage defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, crenjoy.protobuf.Basic2TestMessage> map =
        internalGetTestBasicMap().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .crenjoy.protobuf.Basic2TestMessage&gt; test_basic_map = 7;</code>
   */
  @java.lang.Override

  public crenjoy.protobuf.Basic2TestMessage getTestBasicMapOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, crenjoy.protobuf.Basic2TestMessage> map =
        internalGetTestBasicMap().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int TEST_BASIC_LIST_FIELD_NUMBER = 8;
  private java.util.List<crenjoy.protobuf.Basic2TestMessage> testBasicList_;
  /**
   * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
   */
  @java.lang.Override
  public java.util.List<crenjoy.protobuf.Basic2TestMessage> getTestBasicListList() {
    return testBasicList_;
  }
  /**
   * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
   */
  @java.lang.Override
  public java.util.List<? extends crenjoy.protobuf.Basic2TestMessageOrBuilder> 
      getTestBasicListOrBuilderList() {
    return testBasicList_;
  }
  /**
   * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
   */
  @java.lang.Override
  public int getTestBasicListCount() {
    return testBasicList_.size();
  }
  /**
   * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
   */
  @java.lang.Override
  public crenjoy.protobuf.Basic2TestMessage getTestBasicList(int index) {
    return testBasicList_.get(index);
  }
  /**
   * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
   */
  @java.lang.Override
  public crenjoy.protobuf.Basic2TestMessageOrBuilder getTestBasicListOrBuilder(
      int index) {
    return testBasicList_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(testString_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, testString_);
    }
    if (java.lang.Double.doubleToRawLongBits(testDouble_) != 0) {
      output.writeDouble(2, testDouble_);
    }
    if (java.lang.Float.floatToRawIntBits(testFloat_) != 0) {
      output.writeFloat(3, testFloat_);
    }
    if (testBasicBean_ != null) {
      output.writeMessage(4, getTestBasicBean());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetTestStrMap(),
        TestStrMapDefaultEntryHolder.defaultEntry,
        5);
    for (int i = 0; i < testStrList_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, testStrList_.getRaw(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetTestBasicMap(),
        TestBasicMapDefaultEntryHolder.defaultEntry,
        7);
    for (int i = 0; i < testBasicList_.size(); i++) {
      output.writeMessage(8, testBasicList_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(testString_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, testString_);
    }
    if (java.lang.Double.doubleToRawLongBits(testDouble_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, testDouble_);
    }
    if (java.lang.Float.floatToRawIntBits(testFloat_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, testFloat_);
    }
    if (testBasicBean_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getTestBasicBean());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetTestStrMap().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      testStrMap__ = TestStrMapDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, testStrMap__);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < testStrList_.size(); i++) {
        dataSize += computeStringSizeNoTag(testStrList_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getTestStrListList().size();
    }
    for (java.util.Map.Entry<java.lang.String, crenjoy.protobuf.Basic2TestMessage> entry
         : internalGetTestBasicMap().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, crenjoy.protobuf.Basic2TestMessage>
      testBasicMap__ = TestBasicMapDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, testBasicMap__);
    }
    for (int i = 0; i < testBasicList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, testBasicList_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof crenjoy.protobuf.NestedTestMessage)) {
      return super.equals(obj);
    }
    crenjoy.protobuf.NestedTestMessage other = (crenjoy.protobuf.NestedTestMessage) obj;

    if (!getTestString()
        .equals(other.getTestString())) return false;
    if (java.lang.Double.doubleToLongBits(getTestDouble())
        != java.lang.Double.doubleToLongBits(
            other.getTestDouble())) return false;
    if (java.lang.Float.floatToIntBits(getTestFloat())
        != java.lang.Float.floatToIntBits(
            other.getTestFloat())) return false;
    if (hasTestBasicBean() != other.hasTestBasicBean()) return false;
    if (hasTestBasicBean()) {
      if (!getTestBasicBean()
          .equals(other.getTestBasicBean())) return false;
    }
    if (!internalGetTestStrMap().equals(
        other.internalGetTestStrMap())) return false;
    if (!getTestStrListList()
        .equals(other.getTestStrListList())) return false;
    if (!internalGetTestBasicMap().equals(
        other.internalGetTestBasicMap())) return false;
    if (!getTestBasicListList()
        .equals(other.getTestBasicListList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TEST_STRING_FIELD_NUMBER;
    hash = (53 * hash) + getTestString().hashCode();
    hash = (37 * hash) + TEST_DOUBLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getTestDouble()));
    hash = (37 * hash) + TEST_FLOAT_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTestFloat());
    if (hasTestBasicBean()) {
      hash = (37 * hash) + TEST_BASIC_BEAN_FIELD_NUMBER;
      hash = (53 * hash) + getTestBasicBean().hashCode();
    }
    if (!internalGetTestStrMap().getMap().isEmpty()) {
      hash = (37 * hash) + TEST_STR_MAP_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTestStrMap().hashCode();
    }
    if (getTestStrListCount() > 0) {
      hash = (37 * hash) + TEST_STR_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getTestStrListList().hashCode();
    }
    if (!internalGetTestBasicMap().getMap().isEmpty()) {
      hash = (37 * hash) + TEST_BASIC_MAP_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTestBasicMap().hashCode();
    }
    if (getTestBasicListCount() > 0) {
      hash = (37 * hash) + TEST_BASIC_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getTestBasicListList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static crenjoy.protobuf.NestedTestMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static crenjoy.protobuf.NestedTestMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static crenjoy.protobuf.NestedTestMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static crenjoy.protobuf.NestedTestMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static crenjoy.protobuf.NestedTestMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static crenjoy.protobuf.NestedTestMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static crenjoy.protobuf.NestedTestMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static crenjoy.protobuf.NestedTestMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static crenjoy.protobuf.NestedTestMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static crenjoy.protobuf.NestedTestMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static crenjoy.protobuf.NestedTestMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static crenjoy.protobuf.NestedTestMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(crenjoy.protobuf.NestedTestMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *Nested Test Message.
   * </pre>
   *
   * Protobuf type {@code crenjoy.protobuf.NestedTestMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:crenjoy.protobuf.NestedTestMessage)
      crenjoy.protobuf.NestedTestMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_NestedTestMessage_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetTestStrMap();
        case 7:
          return internalGetTestBasicMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableTestStrMap();
        case 7:
          return internalGetMutableTestBasicMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_NestedTestMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crenjoy.protobuf.NestedTestMessage.class, crenjoy.protobuf.NestedTestMessage.Builder.class);
    }

    // Construct using crenjoy.protobuf.NestedTestMessage.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      testString_ = "";

      testDouble_ = 0D;

      testFloat_ = 0F;

      if (testBasicBeanBuilder_ == null) {
        testBasicBean_ = null;
      } else {
        testBasicBean_ = null;
        testBasicBeanBuilder_ = null;
      }
      internalGetMutableTestStrMap().clear();
      testStrList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutableTestBasicMap().clear();
      if (testBasicListBuilder_ == null) {
        testBasicList_ = java.util.Collections.emptyList();
      } else {
        testBasicList_ = null;
        testBasicListBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return crenjoy.protobuf.BasicTestMessageProto.internal_static_crenjoy_protobuf_NestedTestMessage_descriptor;
    }

    @java.lang.Override
    public crenjoy.protobuf.NestedTestMessage getDefaultInstanceForType() {
      return crenjoy.protobuf.NestedTestMessage.getDefaultInstance();
    }

    @java.lang.Override
    public crenjoy.protobuf.NestedTestMessage build() {
      crenjoy.protobuf.NestedTestMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public crenjoy.protobuf.NestedTestMessage buildPartial() {
      crenjoy.protobuf.NestedTestMessage result = new crenjoy.protobuf.NestedTestMessage(this);
      int from_bitField0_ = bitField0_;
      result.testString_ = testString_;
      result.testDouble_ = testDouble_;
      result.testFloat_ = testFloat_;
      if (testBasicBeanBuilder_ == null) {
        result.testBasicBean_ = testBasicBean_;
      } else {
        result.testBasicBean_ = testBasicBeanBuilder_.build();
      }
      result.testStrMap_ = internalGetTestStrMap();
      result.testStrMap_.makeImmutable();
      if (((bitField0_ & 0x00000002) != 0)) {
        testStrList_ = testStrList_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.testStrList_ = testStrList_;
      result.testBasicMap_ = internalGetTestBasicMap();
      result.testBasicMap_.makeImmutable();
      if (testBasicListBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          testBasicList_ = java.util.Collections.unmodifiableList(testBasicList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.testBasicList_ = testBasicList_;
      } else {
        result.testBasicList_ = testBasicListBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof crenjoy.protobuf.NestedTestMessage) {
        return mergeFrom((crenjoy.protobuf.NestedTestMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(crenjoy.protobuf.NestedTestMessage other) {
      if (other == crenjoy.protobuf.NestedTestMessage.getDefaultInstance()) return this;
      if (!other.getTestString().isEmpty()) {
        testString_ = other.testString_;
        onChanged();
      }
      if (other.getTestDouble() != 0D) {
        setTestDouble(other.getTestDouble());
      }
      if (other.getTestFloat() != 0F) {
        setTestFloat(other.getTestFloat());
      }
      if (other.hasTestBasicBean()) {
        mergeTestBasicBean(other.getTestBasicBean());
      }
      internalGetMutableTestStrMap().mergeFrom(
          other.internalGetTestStrMap());
      if (!other.testStrList_.isEmpty()) {
        if (testStrList_.isEmpty()) {
          testStrList_ = other.testStrList_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureTestStrListIsMutable();
          testStrList_.addAll(other.testStrList_);
        }
        onChanged();
      }
      internalGetMutableTestBasicMap().mergeFrom(
          other.internalGetTestBasicMap());
      if (testBasicListBuilder_ == null) {
        if (!other.testBasicList_.isEmpty()) {
          if (testBasicList_.isEmpty()) {
            testBasicList_ = other.testBasicList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTestBasicListIsMutable();
            testBasicList_.addAll(other.testBasicList_);
          }
          onChanged();
        }
      } else {
        if (!other.testBasicList_.isEmpty()) {
          if (testBasicListBuilder_.isEmpty()) {
            testBasicListBuilder_.dispose();
            testBasicListBuilder_ = null;
            testBasicList_ = other.testBasicList_;
            bitField0_ = (bitField0_ & ~0x00000008);
            testBasicListBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTestBasicListFieldBuilder() : null;
          } else {
            testBasicListBuilder_.addAllMessages(other.testBasicList_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              testString_ = input.readStringRequireUtf8();

              break;
            } // case 10
            case 17: {
              testDouble_ = input.readDouble();

              break;
            } // case 17
            case 29: {
              testFloat_ = input.readFloat();

              break;
            } // case 29
            case 34: {
              input.readMessage(
                  getTestBasicBeanFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 34
            case 42: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              testStrMap__ = input.readMessage(
                  TestStrMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableTestStrMap().getMutableMap().put(
                  testStrMap__.getKey(), testStrMap__.getValue());
              break;
            } // case 42
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureTestStrListIsMutable();
              testStrList_.add(s);
              break;
            } // case 50
            case 58: {
              com.google.protobuf.MapEntry<java.lang.String, crenjoy.protobuf.Basic2TestMessage>
              testBasicMap__ = input.readMessage(
                  TestBasicMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableTestBasicMap().getMutableMap().put(
                  testBasicMap__.getKey(), testBasicMap__.getValue());
              break;
            } // case 58
            case 66: {
              crenjoy.protobuf.Basic2TestMessage m =
                  input.readMessage(
                      crenjoy.protobuf.Basic2TestMessage.parser(),
                      extensionRegistry);
              if (testBasicListBuilder_ == null) {
                ensureTestBasicListIsMutable();
                testBasicList_.add(m);
              } else {
                testBasicListBuilder_.addMessage(m);
              }
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object testString_ = "";
    /**
     * <code>string test_string = 1;</code>
     * @return The testString.
     */
    public java.lang.String getTestString() {
      java.lang.Object ref = testString_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        testString_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string test_string = 1;</code>
     * @return The bytes for testString.
     */
    public com.google.protobuf.ByteString
        getTestStringBytes() {
      java.lang.Object ref = testString_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        testString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string test_string = 1;</code>
     * @param value The testString to set.
     * @return This builder for chaining.
     */
    public Builder setTestString(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      testString_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string test_string = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestString() {
      
      testString_ = getDefaultInstance().getTestString();
      onChanged();
      return this;
    }
    /**
     * <code>string test_string = 1;</code>
     * @param value The bytes for testString to set.
     * @return This builder for chaining.
     */
    public Builder setTestStringBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      testString_ = value;
      onChanged();
      return this;
    }

    private double testDouble_ ;
    /**
     * <code>double test_double = 2;</code>
     * @return The testDouble.
     */
    @java.lang.Override
    public double getTestDouble() {
      return testDouble_;
    }
    /**
     * <code>double test_double = 2;</code>
     * @param value The testDouble to set.
     * @return This builder for chaining.
     */
    public Builder setTestDouble(double value) {
      
      testDouble_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double test_double = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestDouble() {
      
      testDouble_ = 0D;
      onChanged();
      return this;
    }

    private float testFloat_ ;
    /**
     * <code>float test_float = 3;</code>
     * @return The testFloat.
     */
    @java.lang.Override
    public float getTestFloat() {
      return testFloat_;
    }
    /**
     * <code>float test_float = 3;</code>
     * @param value The testFloat to set.
     * @return This builder for chaining.
     */
    public Builder setTestFloat(float value) {
      
      testFloat_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float test_float = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestFloat() {
      
      testFloat_ = 0F;
      onChanged();
      return this;
    }

    private crenjoy.protobuf.Basic2TestMessage testBasicBean_;
    private com.google.protobuf.SingleFieldBuilderV3<
        crenjoy.protobuf.Basic2TestMessage, crenjoy.protobuf.Basic2TestMessage.Builder, crenjoy.protobuf.Basic2TestMessageOrBuilder> testBasicBeanBuilder_;
    /**
     * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
     * @return Whether the testBasicBean field is set.
     */
    public boolean hasTestBasicBean() {
      return testBasicBeanBuilder_ != null || testBasicBean_ != null;
    }
    /**
     * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
     * @return The testBasicBean.
     */
    public crenjoy.protobuf.Basic2TestMessage getTestBasicBean() {
      if (testBasicBeanBuilder_ == null) {
        return testBasicBean_ == null ? crenjoy.protobuf.Basic2TestMessage.getDefaultInstance() : testBasicBean_;
      } else {
        return testBasicBeanBuilder_.getMessage();
      }
    }
    /**
     * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
     */
    public Builder setTestBasicBean(crenjoy.protobuf.Basic2TestMessage value) {
      if (testBasicBeanBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        testBasicBean_ = value;
        onChanged();
      } else {
        testBasicBeanBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
     */
    public Builder setTestBasicBean(
        crenjoy.protobuf.Basic2TestMessage.Builder builderForValue) {
      if (testBasicBeanBuilder_ == null) {
        testBasicBean_ = builderForValue.build();
        onChanged();
      } else {
        testBasicBeanBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
     */
    public Builder mergeTestBasicBean(crenjoy.protobuf.Basic2TestMessage value) {
      if (testBasicBeanBuilder_ == null) {
        if (testBasicBean_ != null) {
          testBasicBean_ =
            crenjoy.protobuf.Basic2TestMessage.newBuilder(testBasicBean_).mergeFrom(value).buildPartial();
        } else {
          testBasicBean_ = value;
        }
        onChanged();
      } else {
        testBasicBeanBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
     */
    public Builder clearTestBasicBean() {
      if (testBasicBeanBuilder_ == null) {
        testBasicBean_ = null;
        onChanged();
      } else {
        testBasicBean_ = null;
        testBasicBeanBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
     */
    public crenjoy.protobuf.Basic2TestMessage.Builder getTestBasicBeanBuilder() {
      
      onChanged();
      return getTestBasicBeanFieldBuilder().getBuilder();
    }
    /**
     * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
     */
    public crenjoy.protobuf.Basic2TestMessageOrBuilder getTestBasicBeanOrBuilder() {
      if (testBasicBeanBuilder_ != null) {
        return testBasicBeanBuilder_.getMessageOrBuilder();
      } else {
        return testBasicBean_ == null ?
            crenjoy.protobuf.Basic2TestMessage.getDefaultInstance() : testBasicBean_;
      }
    }
    /**
     * <code>.crenjoy.protobuf.Basic2TestMessage test_basic_bean = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        crenjoy.protobuf.Basic2TestMessage, crenjoy.protobuf.Basic2TestMessage.Builder, crenjoy.protobuf.Basic2TestMessageOrBuilder> 
        getTestBasicBeanFieldBuilder() {
      if (testBasicBeanBuilder_ == null) {
        testBasicBeanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            crenjoy.protobuf.Basic2TestMessage, crenjoy.protobuf.Basic2TestMessage.Builder, crenjoy.protobuf.Basic2TestMessageOrBuilder>(
                getTestBasicBean(),
                getParentForChildren(),
                isClean());
        testBasicBean_ = null;
      }
      return testBasicBeanBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> testStrMap_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetTestStrMap() {
      if (testStrMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TestStrMapDefaultEntryHolder.defaultEntry);
      }
      return testStrMap_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableTestStrMap() {
      onChanged();;
      if (testStrMap_ == null) {
        testStrMap_ = com.google.protobuf.MapField.newMapField(
            TestStrMapDefaultEntryHolder.defaultEntry);
      }
      if (!testStrMap_.isMutable()) {
        testStrMap_ = testStrMap_.copy();
      }
      return testStrMap_;
    }

    public int getTestStrMapCount() {
      return internalGetTestStrMap().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; test_str_map = 5;</code>
     */

    @java.lang.Override
    public boolean containsTestStrMap(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTestStrMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTestStrMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getTestStrMap() {
      return getTestStrMapMap();
    }
    /**
     * <code>map&lt;string, string&gt; test_str_map = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getTestStrMapMap() {
      return internalGetTestStrMap().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; test_str_map = 5;</code>
     */
    @java.lang.Override

    public java.lang.String getTestStrMapOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTestStrMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; test_str_map = 5;</code>
     */
    @java.lang.Override

    public java.lang.String getTestStrMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTestStrMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearTestStrMap() {
      internalGetMutableTestStrMap().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; test_str_map = 5;</code>
     */

    public Builder removeTestStrMap(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableTestStrMap().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableTestStrMap() {
      return internalGetMutableTestStrMap().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; test_str_map = 5;</code>
     */
    public Builder putTestStrMap(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableTestStrMap().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; test_str_map = 5;</code>
     */

    public Builder putAllTestStrMap(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableTestStrMap().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.LazyStringList testStrList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureTestStrListIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        testStrList_ = new com.google.protobuf.LazyStringArrayList(testStrList_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated string test_str_list = 6;</code>
     * @return A list containing the testStrList.
     */
    public com.google.protobuf.ProtocolStringList
        getTestStrListList() {
      return testStrList_.getUnmodifiableView();
    }
    /**
     * <code>repeated string test_str_list = 6;</code>
     * @return The count of testStrList.
     */
    public int getTestStrListCount() {
      return testStrList_.size();
    }
    /**
     * <code>repeated string test_str_list = 6;</code>
     * @param index The index of the element to return.
     * @return The testStrList at the given index.
     */
    public java.lang.String getTestStrList(int index) {
      return testStrList_.get(index);
    }
    /**
     * <code>repeated string test_str_list = 6;</code>
     * @param index The index of the value to return.
     * @return The bytes of the testStrList at the given index.
     */
    public com.google.protobuf.ByteString
        getTestStrListBytes(int index) {
      return testStrList_.getByteString(index);
    }
    /**
     * <code>repeated string test_str_list = 6;</code>
     * @param index The index to set the value at.
     * @param value The testStrList to set.
     * @return This builder for chaining.
     */
    public Builder setTestStrList(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTestStrListIsMutable();
      testStrList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string test_str_list = 6;</code>
     * @param value The testStrList to add.
     * @return This builder for chaining.
     */
    public Builder addTestStrList(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTestStrListIsMutable();
      testStrList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string test_str_list = 6;</code>
     * @param values The testStrList to add.
     * @return This builder for chaining.
     */
    public Builder addAllTestStrList(
        java.lang.Iterable<java.lang.String> values) {
      ensureTestStrListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, testStrList_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string test_str_list = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestStrList() {
      testStrList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string test_str_list = 6;</code>
     * @param value The bytes of the testStrList to add.
     * @return This builder for chaining.
     */
    public Builder addTestStrListBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureTestStrListIsMutable();
      testStrList_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, crenjoy.protobuf.Basic2TestMessage> testBasicMap_;
    private com.google.protobuf.MapField<java.lang.String, crenjoy.protobuf.Basic2TestMessage>
    internalGetTestBasicMap() {
      if (testBasicMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TestBasicMapDefaultEntryHolder.defaultEntry);
      }
      return testBasicMap_;
    }
    private com.google.protobuf.MapField<java.lang.String, crenjoy.protobuf.Basic2TestMessage>
    internalGetMutableTestBasicMap() {
      onChanged();;
      if (testBasicMap_ == null) {
        testBasicMap_ = com.google.protobuf.MapField.newMapField(
            TestBasicMapDefaultEntryHolder.defaultEntry);
      }
      if (!testBasicMap_.isMutable()) {
        testBasicMap_ = testBasicMap_.copy();
      }
      return testBasicMap_;
    }

    public int getTestBasicMapCount() {
      return internalGetTestBasicMap().getMap().size();
    }
    /**
     * <code>map&lt;string, .crenjoy.protobuf.Basic2TestMessage&gt; test_basic_map = 7;</code>
     */

    @java.lang.Override
    public boolean containsTestBasicMap(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTestBasicMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTestBasicMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, crenjoy.protobuf.Basic2TestMessage> getTestBasicMap() {
      return getTestBasicMapMap();
    }
    /**
     * <code>map&lt;string, .crenjoy.protobuf.Basic2TestMessage&gt; test_basic_map = 7;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, crenjoy.protobuf.Basic2TestMessage> getTestBasicMapMap() {
      return internalGetTestBasicMap().getMap();
    }
    /**
     * <code>map&lt;string, .crenjoy.protobuf.Basic2TestMessage&gt; test_basic_map = 7;</code>
     */
    @java.lang.Override

    public crenjoy.protobuf.Basic2TestMessage getTestBasicMapOrDefault(
        java.lang.String key,
        crenjoy.protobuf.Basic2TestMessage defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, crenjoy.protobuf.Basic2TestMessage> map =
          internalGetTestBasicMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .crenjoy.protobuf.Basic2TestMessage&gt; test_basic_map = 7;</code>
     */
    @java.lang.Override

    public crenjoy.protobuf.Basic2TestMessage getTestBasicMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, crenjoy.protobuf.Basic2TestMessage> map =
          internalGetTestBasicMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearTestBasicMap() {
      internalGetMutableTestBasicMap().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .crenjoy.protobuf.Basic2TestMessage&gt; test_basic_map = 7;</code>
     */

    public Builder removeTestBasicMap(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableTestBasicMap().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, crenjoy.protobuf.Basic2TestMessage>
    getMutableTestBasicMap() {
      return internalGetMutableTestBasicMap().getMutableMap();
    }
    /**
     * <code>map&lt;string, .crenjoy.protobuf.Basic2TestMessage&gt; test_basic_map = 7;</code>
     */
    public Builder putTestBasicMap(
        java.lang.String key,
        crenjoy.protobuf.Basic2TestMessage value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableTestBasicMap().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .crenjoy.protobuf.Basic2TestMessage&gt; test_basic_map = 7;</code>
     */

    public Builder putAllTestBasicMap(
        java.util.Map<java.lang.String, crenjoy.protobuf.Basic2TestMessage> values) {
      internalGetMutableTestBasicMap().getMutableMap()
          .putAll(values);
      return this;
    }

    private java.util.List<crenjoy.protobuf.Basic2TestMessage> testBasicList_ =
      java.util.Collections.emptyList();
    private void ensureTestBasicListIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        testBasicList_ = new java.util.ArrayList<crenjoy.protobuf.Basic2TestMessage>(testBasicList_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        crenjoy.protobuf.Basic2TestMessage, crenjoy.protobuf.Basic2TestMessage.Builder, crenjoy.protobuf.Basic2TestMessageOrBuilder> testBasicListBuilder_;

    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public java.util.List<crenjoy.protobuf.Basic2TestMessage> getTestBasicListList() {
      if (testBasicListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(testBasicList_);
      } else {
        return testBasicListBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public int getTestBasicListCount() {
      if (testBasicListBuilder_ == null) {
        return testBasicList_.size();
      } else {
        return testBasicListBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public crenjoy.protobuf.Basic2TestMessage getTestBasicList(int index) {
      if (testBasicListBuilder_ == null) {
        return testBasicList_.get(index);
      } else {
        return testBasicListBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public Builder setTestBasicList(
        int index, crenjoy.protobuf.Basic2TestMessage value) {
      if (testBasicListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTestBasicListIsMutable();
        testBasicList_.set(index, value);
        onChanged();
      } else {
        testBasicListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public Builder setTestBasicList(
        int index, crenjoy.protobuf.Basic2TestMessage.Builder builderForValue) {
      if (testBasicListBuilder_ == null) {
        ensureTestBasicListIsMutable();
        testBasicList_.set(index, builderForValue.build());
        onChanged();
      } else {
        testBasicListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public Builder addTestBasicList(crenjoy.protobuf.Basic2TestMessage value) {
      if (testBasicListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTestBasicListIsMutable();
        testBasicList_.add(value);
        onChanged();
      } else {
        testBasicListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public Builder addTestBasicList(
        int index, crenjoy.protobuf.Basic2TestMessage value) {
      if (testBasicListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTestBasicListIsMutable();
        testBasicList_.add(index, value);
        onChanged();
      } else {
        testBasicListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public Builder addTestBasicList(
        crenjoy.protobuf.Basic2TestMessage.Builder builderForValue) {
      if (testBasicListBuilder_ == null) {
        ensureTestBasicListIsMutable();
        testBasicList_.add(builderForValue.build());
        onChanged();
      } else {
        testBasicListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public Builder addTestBasicList(
        int index, crenjoy.protobuf.Basic2TestMessage.Builder builderForValue) {
      if (testBasicListBuilder_ == null) {
        ensureTestBasicListIsMutable();
        testBasicList_.add(index, builderForValue.build());
        onChanged();
      } else {
        testBasicListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public Builder addAllTestBasicList(
        java.lang.Iterable<? extends crenjoy.protobuf.Basic2TestMessage> values) {
      if (testBasicListBuilder_ == null) {
        ensureTestBasicListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, testBasicList_);
        onChanged();
      } else {
        testBasicListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public Builder clearTestBasicList() {
      if (testBasicListBuilder_ == null) {
        testBasicList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        testBasicListBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public Builder removeTestBasicList(int index) {
      if (testBasicListBuilder_ == null) {
        ensureTestBasicListIsMutable();
        testBasicList_.remove(index);
        onChanged();
      } else {
        testBasicListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public crenjoy.protobuf.Basic2TestMessage.Builder getTestBasicListBuilder(
        int index) {
      return getTestBasicListFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public crenjoy.protobuf.Basic2TestMessageOrBuilder getTestBasicListOrBuilder(
        int index) {
      if (testBasicListBuilder_ == null) {
        return testBasicList_.get(index);  } else {
        return testBasicListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public java.util.List<? extends crenjoy.protobuf.Basic2TestMessageOrBuilder> 
         getTestBasicListOrBuilderList() {
      if (testBasicListBuilder_ != null) {
        return testBasicListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(testBasicList_);
      }
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public crenjoy.protobuf.Basic2TestMessage.Builder addTestBasicListBuilder() {
      return getTestBasicListFieldBuilder().addBuilder(
          crenjoy.protobuf.Basic2TestMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public crenjoy.protobuf.Basic2TestMessage.Builder addTestBasicListBuilder(
        int index) {
      return getTestBasicListFieldBuilder().addBuilder(
          index, crenjoy.protobuf.Basic2TestMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .crenjoy.protobuf.Basic2TestMessage test_basic_list = 8;</code>
     */
    public java.util.List<crenjoy.protobuf.Basic2TestMessage.Builder> 
         getTestBasicListBuilderList() {
      return getTestBasicListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        crenjoy.protobuf.Basic2TestMessage, crenjoy.protobuf.Basic2TestMessage.Builder, crenjoy.protobuf.Basic2TestMessageOrBuilder> 
        getTestBasicListFieldBuilder() {
      if (testBasicListBuilder_ == null) {
        testBasicListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            crenjoy.protobuf.Basic2TestMessage, crenjoy.protobuf.Basic2TestMessage.Builder, crenjoy.protobuf.Basic2TestMessageOrBuilder>(
                testBasicList_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        testBasicList_ = null;
      }
      return testBasicListBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:crenjoy.protobuf.NestedTestMessage)
  }

  // @@protoc_insertion_point(class_scope:crenjoy.protobuf.NestedTestMessage)
  private static final crenjoy.protobuf.NestedTestMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new crenjoy.protobuf.NestedTestMessage();
  }

  public static crenjoy.protobuf.NestedTestMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NestedTestMessage>
      PARSER = new com.google.protobuf.AbstractParser<NestedTestMessage>() {
    @java.lang.Override
    public NestedTestMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<NestedTestMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NestedTestMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public crenjoy.protobuf.NestedTestMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

